// Matriarch1 Website JavaScript
console.log('MATRIARCH1 Website Loaded');

function scrollToSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
        section.scrollIntoView({ behavior: 'smooth' });
    }
}

document.addEventListener('DOMContentLoaded', function() {
    const ctaButton = document.querySelector('.cta-button');
    if (ctaButton) {
        ctaButton.addEventListener('click', function() {
            alert('Welcome to MATRIARCH1 - The Future of Storytelling!');
        });
    }
    
    // Smooth scrolling for navigation
    const navLinks = document.querySelectorAll('.nav-menu a');
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('href').substring(1);
            scrollToSection(targetId);
        });
    });

    // DUAL TRACKING: Desktop (Eye) + Mobile (Touch)
    const omButton = document.querySelector('.om-button-diamond');
    if (!omButton) {
        console.log('Om button not found!');
        return;
    }

    // Check if mobile device
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    console.log('Is mobile:', isMobile);
    
    if (isMobile) {
        // MOBILE VERSION - Touch movement
        console.log('Mobile device detected - Using touch tracking');
        
        let isDragging = false;
        let startX, startY, initialX, initialY;
        
        omButton.style.cursor = 'grab';
        
        // Touch events for mobile
        omButton.addEventListener('touchstart', function(e) {
            isDragging = true;
            omButton.style.cursor = 'grabbing';
            
            const touch = e.touches[0];
            startX = touch.clientX;
            startY = touch.clientY;
            
            // Get current transform values
            const style = window.getComputedStyle(omButton);
            const matrix = new DOMMatrixReadOnly(style.transform);
            initialX = matrix.m41;
            initialY = matrix.m42;
            
            e.preventDefault();
        });
        
        document.addEventListener('touchmove', function(e) {
            if (isDragging && e.touches.length > 0) {
                const touch = e.touches[0];
                const deltaX = touch.clientX - startX;
                const deltaY = touch.clientY - startY;
                
                // Move the entire button, not just the symbol
                omButton.style.transform = `translate(calc(-50% + ${deltaX}px), calc(-50% + ${deltaY}px))`;
            }
        });
        
        document.addEventListener('touchend', function() {
            isDragging = false;
            omButton.style.cursor = 'grab';
        });
        
    } else {
        // DESKTOP VERSION - Eye tracking
        console.log('Desktop detected - Attempting eye tracking');
        
        setTimeout(() => {
            if (typeof webgazer !== 'undefined') {
                webgazer.setGazeListener(function(data, elapsedTime) {
                    if (data && data.x && data.y) {
                        const x = (data.x / window.innerWidth) * 100 - 50;
                        const y = (data.y / window.innerHeight) * 100 - 50;
                        // Move entire button based on eye position
                        omButton.style.transform = `translate(calc(-50% + ${x}px), calc(-50% + ${y}px))`;
                    }
                }).begin();
                
                webgazer.showVideoPreview(true).showPredictionPoints(true);
                
                setTimeout(() => {
                    alert('Please click on 9 points on screen for eye tracking calibration');
                }, 1000);
                
            } else {
                console.log('WebGazer not available - Using mouse tracking');
                // Fallback to mouse tracking - PARENT ELEMENT MOVE KARO
                document.addEventListener('mousemove', function(e) {  // YAHAN CORRECTION KARO
                    const x = (e.clientX / window.innerWidth) * 100 - 50;
                    const y = (e.clientY / window.innerHeight) * 100 - 50;
                    omButton.style.transform = `translate(calc(-50% + ${x}px), calc(-50% + ${y}px))`;
                });
            }
        }, 2000);
    }
});

window.resetCalibration = function() {
    if (typeof webgazer !== 'undefined') {
        webgazer.clearData();
        alert('Calibration reset. Please click on points to recalibrate.');
    }
    
    // Reset Om button position
    const omButton = document.querySelector('.om-button-diamond');
    if (omButton) {
        omButton.style.transform = 'translate(-50%, -50%)';
    }
};